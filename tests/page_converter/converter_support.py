#! /usr/bin/env python3
#  -*- coding: utf-8 -*-
#
# Support module generated by PAGE version 8.0
#  in conjunction with Tcl version 8.6
#    May 26, 2025 11:09:39 AM CST  platform: Windows NT

import sys
import tkinter as tk
import tkinter.ttk as ttk
from tkinter.constants import *

import converter

_debug = True # False to eliminate debug printing from callback functions.

def main(*args):
    '''Main entry point for the application.'''
    global root
    root = tk.Tk()
    root.protocol( 'WM_DELETE_WINDOW' , root.destroy)
    # Creates a toplevel widget.
    global _top1, _w1
    _top1 = root
    _w1 = converter.Toplevel1(_top1)
    root.mainloop()

def on_click_bt_clear(e, self):
    if _debug:
        print('converter_support.on_click_bt_clear')
    try:
        # set the text of the entry widget to an empty string
        self.ed_cel.delete(0, tk.END)
        self.ed_fah.delete(1.0, tk.END)  # delete all text in the Text widget
    except Exception as e:
        print('Error in on_click_bt_clear:', e)
        sys.stdout.flush()

def on_click_ed_cel(e, self):
    if _debug:
        print('converter_support.on_click_ed_cel')
    # Get the string in ed_cel
    try:
        cel_str = (self.ed_cel.get())
        cel = float(cel_str)  # Convert to float
        fah = (cel * 9/5) + 32  # Convert Celsius to Fahrenheit
        fah_str = "%f" % fah  # Format to 2 decimal places
        self.ed_fah.delete(1.0, tk.END)  # Clear the Text widget
        self.ed_fah.insert(tk.END, fah_str)  # Insert the result
    except:
        self.ed_fah.delete(1.0, tk.END)  # Clear the Text widget

def on_click_ed_fah(e, self):
    if _debug:
        print('converter_support.on_click_ed_fah')
    # Get the string in ed_cel
    try:
        # Get the string in ed_fah
        fah_str = (self.ed_fah.get("1.0", tk.END)).strip()  # Get all text from Text widget
        fah = float(fah_str)  # Convert to float
        cel = (fah - 32) * 5./9.
        cel_str = "%f" % cel  
        # delete the text in ed_cel and insert the result
        self.ed_cel.delete(0, tk.END)  # Clear the Entry widget
        self.ed_cel.insert(tk.END, cel_str)  # Insert the result
    except:
        self.ed_cel.delete(0, tk.END)  # Clear the Entry widget

if __name__ == '__main__':
    converter.start_up()




