#! /usr/bin/env python3
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 8.0
#  in conjunction with Tcl version 8.6
#    May 27, 2025 08:16:47 AM CST  platform: Windows NT

import sys
import tkinter as tk
import tkinter.ttk as ttk
from tkinter.constants import *
import os.path

_location = os.path.dirname(__file__)

import test3_support

_bgcolor = '#d9d9d9'
_fgcolor = '#000000'
_tabfg1 = 'black' 
_tabfg2 = 'white' 
_bgmode = 'light' 
_tabbg1 = '#d9d9d9' 
_tabbg2 = 'gray40' 

class Toplevel1:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''

        top.geometry("600x450+468+138")
        top.minsize(120, 1)
        top.maxsize(1540, 845)
        top.resizable(1,  1)
        top.title("Toplevel 0")
        top.configure(background="#d9d9d9")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="#000000")

        self.top = top

        self.Label2 = tk.Label(self.top)
        self.Label2.place(relx=0.05, rely=0.156, height=21, width=74)
        self.Label2.configure(activebackground="#d9d9d9")
        self.Label2.configure(activeforeground="black")
        self.Label2.configure(anchor='w')
        self.Label2.configure(background="#d9d9d9")
        self.Label2.configure(compound='left')
        self.Label2.configure(disabledforeground="#a3a3a3")
        self.Label2.configure(foreground="#000000")
        self.Label2.configure(highlightbackground="#d9d9d9")
        self.Label2.configure(highlightcolor="#000000")
        self.Label2.configure(text='''Fahrenheit''')

        self.Label1 = tk.Label(self.top)
        self.Label1.place(relx=0.05, rely=0.089, height=21, width=74)
        self.Label1.configure(activebackground="#d9d9d9")
        self.Label1.configure(activeforeground="black")
        self.Label1.configure(anchor='w')
        self.Label1.configure(background="#d9d9d9")
        self.Label1.configure(compound='left')
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(foreground="#000000")
        self.Label1.configure(highlightbackground="#d9d9d9")
        self.Label1.configure(highlightcolor="#000000")
        self.Label1.configure(text='''Celsius''')

        self.ed_cel = tk.Text(self.top)
        self.ed_cel.place(relx=0.2, rely=0.022, relheight=0.12, relwidth=0.24)
        self.ed_cel.configure(background="white")
        self.ed_cel.configure(cursor="fleur")
        self.ed_cel.configure(font="TkTextFont")
        self.ed_cel.configure(foreground="black")
        self.ed_cel.configure(highlightbackground="#d9d9d9")
        self.ed_cel.configure(highlightcolor="#000000")
        self.ed_cel.configure(insertbackground="#000000")
        self.ed_cel.configure(selectbackground="#d9d9d9")
        self.ed_cel.configure(selectforeground="black")
        self.ed_cel.configure(wrap="word")
        self.ed_cel.bind('<KeyRelease>',lambda e:test3_support.on_key_cel(e, self))

        self.ed_fah = tk.Entry(self.top)
        self.ed_fah.place(relx=0.2, rely=0.156, height=60, relwidth=0.24)
        self.ed_fah.configure(background="white")
        self.ed_fah.configure(cursor="fleur")
        self.ed_fah.configure(disabledforeground="#a3a3a3")
        self.ed_fah.configure(font="TkFixedFont")
        self.ed_fah.configure(foreground="#000000")
        self.ed_fah.configure(highlightbackground="#d9d9d9")
        self.ed_fah.configure(highlightcolor="#000000")
        self.ed_fah.configure(insertbackground="#000000")
        self.ed_fah.configure(selectbackground="#d9d9d9")
        self.ed_fah.configure(selectforeground="black")
        self.ed_fah.bind('<KeyRelease>',lambda e:test3_support.on_key_fah(e, self))

        self.bt_clear = tk.Button(self.top)
        self.bt_clear.place(relx=0.067, rely=0.356, height=56, width=187)
        self.bt_clear.configure(activebackground="#d9d9d9")
        self.bt_clear.configure(activeforeground="black")
        self.bt_clear.configure(background="#d9d9d9")
        self.bt_clear.configure(disabledforeground="#a3a3a3")
        self.bt_clear.configure(foreground="#000000")
        self.bt_clear.configure(highlightbackground="#d9d9d9")
        self.bt_clear.configure(highlightcolor="#000000")
        self.bt_clear.configure(text='''Clear''')
        self.bt_clear.bind('<ButtonRelease-1>',lambda e:test3_support.on_click_clear(e, self))

def start_up():
    test3_support.main()

if __name__ == '__main__':
    test3_support.main()




