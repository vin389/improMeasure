#############################################################################
# Generated by PAGE version 8.0
#  in conjunction with Tcl version 8.6
#  May 27, 2025 11:28:54 AM CST  platform: Windows NT
set vTcl(timestamp) ""
if {![info exists vTcl(borrow)]} {
    ::vTcl::MessageBox -title Error -message  "You must open project files from within PAGE."
    exit}


set vTcl(actual_gui_font_dft_desc)  TkDefaultFont
set vTcl(actual_gui_font_dft_name)  TkDefaultFont
set vTcl(actual_gui_font_text_desc)  TkTextFont
set vTcl(actual_gui_font_text_name)  TkTextFont
set vTcl(actual_gui_font_fixed_desc)  TkFixedFont
set vTcl(actual_gui_font_fixed_name)  TkFixedFont
set vTcl(actual_gui_font_menu_desc)  TkMenuFont
set vTcl(actual_gui_font_menu_name)  TkMenuFont
set vTcl(actual_gui_font_tooltip_desc)  TkDefaultFont
set vTcl(actual_gui_font_tooltip_name)  TkDefaultFont
set vTcl(actual_gui_font_treeview_desc)  TkDefaultFont
set vTcl(actual_gui_font_treeview_name)  TkDefaultFont
########################################### 
set vTcl(actual_gui_bg) #d9d9d9
set vTcl(actual_gui_fg) #000000
set vTcl(actual_gui_analog) #ececec
set vTcl(actual_gui_menu_analog) #ececec
set vTcl(actual_gui_menu_bg) #d9d9d9
set vTcl(actual_gui_menu_fg) #000000
set vTcl(complement_color) gray40
set vTcl(analog_color_p) #c3c3c3
set vTcl(analog_color_m) beige
set vTcl(tabfg1) black
set vTcl(tabfg2) white
set vTcl(actual_gui_menu_active_bg)  #ececec
set vTcl(actual_gui_menu_active_fg)  #000000
########################################### 
set vTcl(pr,autoalias) 1
set vTcl(pr,relative_placement) 1
set vTcl(mode) Relative
set vTcl(project_theme) default



proc vTclWindow.top1 {base} {
    global vTcl
    if {$base == ""} {
        set base .top1
    }
    if {[winfo exists $base]} {
        wm deiconify $base; return
    }
    set top $base
    set target $base
    ###################
    # CREATING WIDGETS
    ###################
    vTcl::widgets::core::toplevel::createCmd $top -class Toplevel \
        -menu $top.m52 -background #d9d9d9 -highlightbackground #d9d9d9 \
        -highlightcolor #000000 
    wm focusmodel $top passive
    wm geometry $top 600x450+612+209
    update
    # set in toplevel.wgt.
    global vTcl
    global img_list
    set vTcl(save,dflt,origin) 0
    wm maxsize $top 1540 845
    wm minsize $top 120 1
    wm overrideredirect $top 0
    wm resizable $top 1 1
    wm deiconify $top
    set toptitle "my_title"
    wm title $top $toptitle
    namespace eval ::widgets::${top}::ClassOption {}
    set ::widgets::${top}::ClassOption(-toptitle) $toptitle
    vTcl:DefineAlias "$top" "MyClassName" vTcl:Toplevel:WidgetProc "" 1
    set vTcl(real_top) {}
    menu "$top.m52" \
        -activebackground #d9d9d9 -activeforeground black \
        -font "-family {Segoe UI} -size 9" -tearoff 0 
    label "$top.lab49" \
        -activebackground #d9d9d9 -activeforeground black -anchor w \
        -background #d9d9d9 -compound left -disabledforeground #a3a3a3 \
        -font "-family {Segoe UI} -size 9" -foreground #000000 \
        -highlightbackground #d9d9d9 -highlightcolor #000000 \
        -text "Fahrenheit" 
    vTcl:DefineAlias "$top.lab49" "Label2" vTcl:WidgetProc "MyClassName" 1
    label "$top.lab48" \
        -activebackground #d9d9d9 -activeforeground black -anchor w \
        -background #d9d9d9 -compound left -disabledforeground #a3a3a3 \
        -font "-family {Segoe UI} -size 9" -foreground #000000 \
        -highlightbackground #d9d9d9 -highlightcolor #000000 -text "Celsius" 
    vTcl:DefineAlias "$top.lab48" "Label1" vTcl:WidgetProc "MyClassName" 1
    button "$top.but54" \
        -activebackground #d9d9d9 -activeforeground black -background #d9d9d9 \
        -disabledforeground #a3a3a3 -font "-family {Segoe UI} -size 9" \
        -foreground #000000 -highlightbackground #d9d9d9 \
        -highlightcolor #000000 -text "Demonstrate" 
    vTcl:DefineAlias "$top.but54" "bt_example" vTcl:WidgetProc "MyClassName" 1
    bind $top.but54 <ButtonRelease-1> {
        lambda e: on_click_example(e, self)
    }
    button "$top.but47" \
        -activebackground #d9d9d9 -activeforeground black -background #d9d9d9 \
        -disabledforeground #a3a3a3 -font "-family {Segoe UI} -size 9" \
        -foreground #000000 -highlightbackground #d9d9d9 \
        -highlightcolor #000000 -text "Clear" 
    vTcl:DefineAlias "$top.but47" "bt_clear" vTcl:WidgetProc "MyClassName" 1
    bind $top.but47 <ButtonRelease-1> {
        lambda e: on_click_clear(e, self)
    }
    entry "$top.ent50" \
        -background white -disabledforeground #a3a3a3 \
        -font "-family {Courier New} -size 10" -foreground #000000 \
        -highlightbackground #d9d9d9 -highlightcolor #000000 \
        -insertbackground #000000 -selectbackground #d9d9d9 \
        -selectforeground black -width 174 
    vTcl:DefineAlias "$top.ent50" "ed_cel" vTcl:WidgetProc "MyClassName" 1
    bind $top.ent50 <<SetBalloon>> {
        set ::vTcl::balloon::%W {Enter temperature in Celsius here.}
    }
    bind $top.ent50 <KeyRelease> {
        lambda e: on_key_cel(e, self)
    }
    text "$top.tex51" \
        -background white -font "-family {Segoe UI} -size 9" \
        -foreground black -height 44 -highlightbackground #d9d9d9 \
        -highlightcolor #000000 -insertbackground #000000 \
        -selectbackground #d9d9d9 -selectforeground black -width 174 \
        -wrap word 
    $top.tex51 configure -font "TkTextFont"
    $top.tex51 insert end text
    vTcl:DefineAlias "$top.tex51" "ed_fah" vTcl:WidgetProc "MyClassName" 1
    bind $top.tex51 <<SetBalloon>> {
        set ::vTcl::balloon::%W {Enter temperature in Fahrenheit here.}
    }
    bind $top.tex51 <KeyRelease> {
        lambda e: on_key_fah(e, self)
    }
    button "$top.but55" \
        -activebackground #d9d9d9 -activeforeground black -background #d9d9d9 \
        -disabledforeground #a3a3a3 -font "-family {Segoe UI} -size 9" \
        -foreground #000000 -highlightbackground #d9d9d9 \
        -highlightcolor #000000 -text "Button" 
    vTcl:DefineAlias "$top.but55" "Button1" vTcl:WidgetProc "MyClassName" 1
    ###################
    # SETTING GEOMETRY
    ###################
    place $top.lab49 \
        -in $top -x 0 -relx 0.033 -y 0 -rely 0.133 -width 0 -relwidth 0.14 \
        -height 0 -relheight 0.047 -anchor nw -bordermode ignore 
    place $top.lab48 \
        -in $top -x 0 -relx 0.033 -y 0 -rely 0.067 -width 0 -relwidth 0.107 \
        -height 0 -relheight 0.047 -anchor nw -bordermode ignore 
    place $top.but54 \
        -in $top -x 0 -relx 0.067 -y 0 -rely 0.444 -width 167 -relwidth 0 \
        -height 36 -relheight 0 -anchor nw -bordermode ignore 
    place $top.but47 \
        -in $top -x 0 -relx 0.067 -y 0 -rely 0.289 -width 177 -relwidth 0 \
        -height 36 -relheight 0 -anchor nw -bordermode ignore 
    place $top.ent50 \
        -in $top -x 0 -relx 0.2 -y 0 -rely 0.022 -width 174 -relwidth 0 \
        -height 40 -relheight 0 -anchor nw -bordermode ignore 
    place $top.tex51 \
        -in $top -x 0 -relx 0.2 -y 0 -rely 0.133 -width 0 -relwidth 0.29 \
        -height 0 -relheight 0.098 -anchor nw -bordermode ignore 
    place $top.but55 \
        -in $top -x 0 -relx 0.067 -y 0 -rely 0.556 -width 47 -relwidth 0 \
        -height 26 -relheight 0 -anchor nw -bordermode ignore 

    vTcl:FireEvent $base <<Ready>>
}

proc 36 {args} {return 1}


Window show .
set btop1 ""
if {$vTcl(borrow)} {
    set btop1 .bor[expr int([expr rand() * 100])]
    while {[lsearch $btop1 $vTcl(tops)] != -1} {
        set btop1 .bor[expr int([expr rand() * 100])]
    }
}
set vTcl(btop) $btop1
Window show .top1 $btop1
if {$vTcl(borrow)} {
    $btop1 configure -background plum
}

