#! /usr/bin/env python3
#  -*- coding: utf-8 -*-
#
# Support module generated by PAGE version 8.0
#  in conjunction with Tcl version 8.6
#    May 27, 2025 08:24:40 AM CST  platform: Windows NT

import sys
import tkinter as tk
import tkinter.ttk as ttk
from tkinter.constants import *

import test4

_debug = True # False to eliminate debug printing from callback functions.

def main(*args):
    '''Main entry point for the application.'''
    global root
    root = tk.Tk()
    root.protocol( 'WM_DELETE_WINDOW' , root.destroy)
    # Creates a toplevel widget.
    global _top1, _w1
    _top1 = root
    _w1 = test4.MyClassName(_top1)
    root.mainloop()

def on_click_clear(e, self):
    if _debug:
        print('test4_support.on_click_clear')
    # clear self.ed_fah and self.ed_cel
    self.ed_fah.delete(1.0, tk.END)
    self.ed_cel.delete(0, tk.END)

def on_key_cel(e, self):
    if _debug:
        print('test4_support.on_key_cel')
    # get string from self.ed_cel
    # convert to float
    try:
        str_cel = self.ed_cel.get()
        cel = float(str_cel)
        fah = cel * 9.0 / 5.0 + 32.0
        str_fah = "%.8f" % fah
        # set self.ed_fah to str_fah
        self.ed_fah.delete(1.0, tk.END)
        self.ed_fah.insert(tk.END, str_fah)
    except:
        # if not a float, clear ed_fah
        self.ed_fah.delete(1.0, tk.END)
    return

def on_key_fah(e, self):
    if _debug:
        print('test4_support.on_key_fah')
    # get string from self.ed_fah
    try:
        str_fah = self.ed_fah.get(1.0, tk.END).strip()
        fah = float(str_fah)
        cel = (fah - 32.0) * 5.0 / 9.0
        str_cel = "%.8f" % cel
        self.ed_cel.delete(0, tk.END)
        self.ed_cel.insert(tk.END, str_cel)
    except:
        # if not a float, clear ed_cel
        self.ed_cel.delete(0, tk.END)
    return

def on_click_save(e, self):
    if _debug:
        print('test4_support.on_click_save')
    # get string from self.ed_fah
    str_fah = self.ed_fah.get(1.0, tk.END).strip()
    str_cel = self.ed_cel.get().strip()
    # save to data as self member data
    self.str_fah = str_fah
    self.str_cel = str_cel

def on_click_example(e, self):
    if _debug:
        print('test4_support.on_click_example')
    # set self.ed_fah to 32.0 and self.ed_cel to 0.0
    # if the str_fah is a variable of self (i.e., self.str_fah), then
    # set self.ed_fah to self.str_fah
    if hasattr(self, 'str_fah'):
        self.ed_fah.delete(1.0, tk.END)
        self.ed_fah.insert(tk.END, self.str_fah)
    if hasattr(self, 'str_cel'):
        self.ed_cel.delete(0, tk.END)
        self.ed_cel.insert(tk.END, self.str_cel)     
#    self.ed_fah.delete(1.0, tk.END)
#    self.ed_fah.insert(tk.END, "32.0")
#    on_key_fah(e, self)


if __name__ == '__main__':
    test4.start_up()




